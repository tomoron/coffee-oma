version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.14.0
  aws-ecs: circleci/aws-ecs@1.4.0
jobs:
  test:
    docker:
      - image: tomoron/portfolio-coffee:latest
        auth:
          username: tomoron
          password: $DOCKERHUB_PASSWORD
        environment:
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
          ENV_FILE: $ENV_FILE
      - image: mysql:8.0
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: "true"
          MYSQL_ROOT_HOST: "127.0.0.1"
          MYSQL_DATABE: db
        command: --default-authentication-plugin=mysql_native_password
      - image: selenium/standalone-chrome-debug:latest
        name: chrome
    working_directory: ~/coffee
    steps:
      - checkout
      - run:
          name: ディレクトリを移動
          command: cd rails
      - run:
          name: bundleをインストール
          command: bundle check || bundle install --jobs=4
      - run:
          name: yarnを追加
          command: yarn install
      - save_cache:
          key: rails-{{ checksum "Gemfile.lock"}}-{{ checksum "yarn.lock"}}
          paths:
            - vendor/bundle
            - node_modules
      - run:
          name: webpackを追加
          command: bundle exec bin/webpack
      - run:
          name: Decode ENV file
          command: echo $ENV_FILE | base64 --decode > .env
      - run:
          name: rubocop
          command: bundle exec rubocop
      - run: mv ./config/database.yml.ci ./config/database.yml
      - run:
          name: データベースを作成
          command: bundle exec rails db:create || bundle exec rails db:migrate
      - run:
          name: rspec test
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"
            bundle exec rspec \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
workflows:
  version: 2
  test-and-deploy:
    jobs:
      - test
      - aws-ecr/build-and-push-image:
          requires:
            - test
          account-url: AWS_ECR_ACCOUNT_URL
          path: "./rails"
          repo: "portfolio-rails"
          region: AWS_DEFAULT_REGION
          tag: "${CIRCLE_SHA1}"
          dockerfile: "Dockerfile.production"
          filters:
            branches:
              only:
                - master
      - aws-ecs/deploy-service-update:
          requires:
            - aws-ecr/build-and-push-image
          aws-region: "${AWS_DEFAULT_REGION}"
          family: "${AWS_RESOURCE_NAME_PREFIX}-service"
          cluster-name: "${AWS_RESOURCE_NAME_PREFIX}-cluster"
          container-image-name-updates: "container=${AWS_RESOURCE_NAME_PREFIX}-service,tag=${CIRCLE_SHA1}"
          filters:
            branches:
              only:
                - master
