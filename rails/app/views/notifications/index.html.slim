.ui.container
  .ui.grid
    .column
      - breadcrumb :notification
      = breadcrumbs separator: " > " ,class: 'ui breadcrumb top-padding', fragment_class: 'section', current_class: 'active'
  .ui.centered.grid.margin-zero
    .twelve.wide.column
      h1#title 通知
      .ui.top.attached.four.tabular.menu
        a.active.item data-tab = "first" すべて
        a.item data-tab = "second" フォロー
        a.item data-tab = "third" レビューお気に入り
        a.item data-tab = "four" メッセージ
      .ui.bottom.attached.tab.segment.active data-tab= "first"
        - if @notifications.empty?
          |通知はまだ届いていません
        - else
          - @notifications.each do |notification|
            .ui.segment
              .ui.items
                .item
                  - case notification.source_type
                  - when 'Relationship'
                    h3.ui.icon.header
                      i.blue.users.icon.mt-10
                    .ui.tiny.circular.image
                      img src = notification.sender.icon.url
                    .content
                      a.header href = "/users/#{notification.sender.id}/show"
                        = notification.sender.username
                        |さんにフォローされました
                      .meta
                        span.date #{time_ago_in_words(notification.created_at)}前
                  - when "Like"
                    h3.ui.icon.header
                      i.red.heart.icon.mt-10
                    .ui.tiny.circular.image
                      img src = notification.sender.icon.url
                    .content
                      - if notification.source.class.name === 'ProductReviewLike'
                        a.header href = product_path(notification.source.liked_id)
                          = notification.sender.username
                          |さんがあなたのレビューにライクしました
                        .meta
                          span.date #{time_ago_in_words(notification.created_at)}前
                        .description
                          =simple_format(h(notification.source.review.content))
                      - elsif notification.source.class.name === 'BeanReviewLike'
                        a.header href = bean_path(notification.source.liked_id)
                          = notification.sender.username
                          |さんがあなたのレビューにライクしました
                        .meta
                          span.date #{time_ago_in_words(notification.created_at)}前
                        .description
                          =simple_format(h(notification.source.bean_review.content))
                  - when 'Message'
                    h3.ui.icon.header
                      i.blue.mail.icon.mt-10
                    .ui.tiny.circular.image
                        img src = notification.sender.icon.url
                    .content
                      a.header href = room_path(notification.source.room_id)
                        = notification.sender.username
                        |さんからメッセージが届きました
                      .meta
                        span.date #{time_ago_in_words(notification.created_at)}前
      .ui.bottom.attached.tab.segment data-tab= "second"
        - if @follow_notifications.empty?
          |通知はまだ届いていません
        - else
          - @follow_notifications.each do |notification|
            .ui.segment
              .ui.items
                .item
                  h3.ui.icon.header
                    i.blue.users.icon.mt-10
                  .ui.tiny.circular.image
                    img src = notification.sender.icon.url
                  .content
                    a.header href = "users/#{notification.sender.id}/show"
                      = notification.sender.username
                      |さんにフォローされました
                    .meta
                      span.date #{time_ago_in_words(notification.created_at)}前
      .ui.bottom.attached.tab.segment data-tab= "third"
        - if @like_notifications.empty?
          |通知はまだ届いていません
        - else
          - @like_notifications.each do |notification|
            .ui.segment
              .ui.items
                .item
                  h3.ui.icon.header
                    i.red.heart.icon.mt-10
                  .ui.tiny.circular.image
                    img src = notification.sender.icon.url
                  - if notification.source.class.name === 'ProductReviewLike'
                    .content
                      a.header href = product_path(notification.source.liked_id)
                        = notification.sender.username
                        |さんがあなたのレビューにライクしました
                      .meta
                        span.date #{time_ago_in_words(notification.created_at)}前
                      .description
                        =simple_format(h(notification.source.review.content))
                  - elsif notification.source.class.name === 'BeanReviewLike'
                    .content
                      a.header href = bean_path(notification.source.liked_id)
                        = notification.sender.username
                        |さんがあなたのレビューにライクしました
                      .meta
                        span.date #{time_ago_in_words(notification.created_at)}前
                      .description
                        =simple_format(h(notification.source.bean_review.content))
      / .ui.bottom.attached.tab.segment data-tab= "four"
      /   - if @like_notifications.empty?
      /     |通知はまだ届いていません
      /   - else
      /     - @bean_review_like_notifications.each do |notification|
      /       .ui.segment
      /         .ui.items
      /           .item
      /             h3.ui.icon.header
      /               i.red.heart.icon.mt-10
      /             .ui.tiny.circular.image
      /               img src = notification.sender.icon.url
      /             .content
      /               a.header href = bean_path(notification.like.liked_id)
      /                 = notification.sender.username
      /                 |さんがあなたのレビューにライクしました
      /               .meta
      /                 span.date #{time_ago_in_words(notification.created_at)}前
      /               .description
      /                 =simple_format(h(notification.like.bean_review.content))
      .ui.bottom.attached.tab.segment data-tab = "four"
        - if @message_notifications.empty?
          |通知はまだ届いていません
        - else
          - @message_notifications.each do |notification|
            .ui.segment
              .ui.items
                .item
                  h3.ui.icon.header
                    i.blue.mail.icon.mt-10
                  .ui.tiny.circular.image
                    img src = notification.sender.icon.url
                  .content
                    a.header href = room_path(notification.source.room_id)
                      = notification.sender.username
                      |さんからメッセージが届きました
                    .meta
                      span.date #{time_ago_in_words(notification.created_at)}前
      .segment
