.ui.container
  = component('breadcrumb', path: 'notification')
  .ui.centered.grid.margin-zero
    .twelve.wide.column
      h1#title 通知
      .ui.top.attached.four.tabular.menu
        a.active.tab.item data-tab = "first" すべて
        a.tab.item data-tab = "second" フォロー
        a.tab.item data-tab = "third" レビューお気に入り
        a.tab.item data-tab = "four" メッセージ
      .ui.bottom.attached.tab.segment.active data-tab= "first"
        - if @notifications.empty?
          |通知はまだ届いていません
        - else
          - @notifications.each do |notification|
            .ui.segment
              .ui.items
                .item
                  - case notification.source_type
                  - when 'Relationship'
                    h3.ui.icon.header
                      i.blue.users.icon.mt-10
                    .ui.tiny.circular.image
                      img src = notification.sender_icon
                    .content
                      a.header href = user_registration_show_path(notification.sender_id)
                        = notification.sender_name
                        |さんにフォローされました
                      .meta
                        span.date #{notification.created_ago}前
                  - when "Like"
                    h3.ui.icon.header
                      i.red.heart.icon.mt-10
                    .ui.tiny.circular.image
                      img src = notification.sender_icon
                    .content
                      - if notification.product_review_like?
                        a.header href = product_path(notification.product_id)
                          = notification.sender_name
                          |さんがあなたのレビューにライクしました
                        .meta
                          span.date #{notification.created_ago}前
                        .description
                          =simple_format(h(notification.review_content))
                      - elsif notification.bean_review_like?
                        a.header href = bean_path(notification.bean_id)
                          = notification.sender_name
                          |さんがあなたのレビューにライクしました
                        .meta
                          span.date #{notification.created_ago}前
                        .description
                          =simple_format(h(notification.review_content))
                  - when 'Message'
                    h3.ui.icon.header
                      i.blue.mail.icon.mt-10
                    .ui.tiny.circular.image
                        img src = notification.sender_icon
                    .content
                      a.header href = room_path(notification.room_id)
                        = notification.sender_name
                        |さんからメッセージが届きました
                      .meta
                        span.date #{notification.created_ago}前
      .ui.bottom.attached.tab.segment data-tab= "second"
        turbo-frame id='follow_notification' src= follow_component_notifications_path loading='lazy'
          = component('remote_loading')
      .ui.bottom.attached.tab.segment data-tab= "third"
        turbo-frame id='like_notification' src= like_component_notifications_path loading='lazy'
          = component('remote_loading')
      .ui.bottom.attached.tab.segment data-tab = "four"
        turbo-frame id='message_notification' src= message_component_notifications_path loading='lazy'
          = component('remote_loading')
      .segment
